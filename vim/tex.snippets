global !p
def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def notmath():
    return vim.eval('vimtex#syntax#in_mathzone()') != '1'

def comment():
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
    return x != '0' and y != '0'

def item_env():
    return env("itemize") or env("enumerate") or env("invindent")

endglobal

# text editing ------------------------------------------

snippet tbb "Bold Text" wA
\textbf{$1}$0
endsnippet

snippet tii "Italics Text" wA
\textit{$1}$0
endsnippet

snippet tic "Code (inline) Text" wA
\code{$1}$0
endsnippet

snippet tsc "Smallcaps Text" wA
\textsc{$1}$0
endsnippet

snippet cbsql "Code Block (SQL)" wA
\begin{lstlisting}[style=mySQL]
$0
\end{lstlisting}
endsnippet

snippet \sec "Section" b
\section{$1}$0
endsnippet

snippet \ssec "Sub-section" b
\subsection{$1}$0
endsnippet

snippet \sssec "Sub-sub-section" b
\subsubsection{$1}$0
endsnippet

snippet \def "Definition Text" wA
\definition{$1}$0
endsnippet

snippet \ddef "Descriptive Definition" wA
\definition[$2]{$1}$0
endsnippet

snippet \ildef "Inline Definition" wA
\ildefinition{$1}$0
endsnippet

snippet enum "Enumerate" b
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" b
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet invi "Indentize" b
\begin{invindent}
	\item $0
\end{invindent}
endsnippet

context "item_env()"
snippet \\ "New item" bA 
\item $0
endsnippet

# environment helpers -----------------------------------------

snippet begg "begin{} / end{} with more context" b
\begin{$1}$2
	$0
\end{$1}
endsnippet

snippet beg "begin{} / end{}" b
\begin{$1}
	$0
\end{$1}
endsnippet

# math modes -----------------------------------------

snippet iim "Inline Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet idm "Inline Math with displaystyle" A
\( {\displaystyle{ $1 }} \) $0
endsnippet

snippet ddm "Display Math" A
\[
$1
\] $0
endsnippet

# math helpers -----------------------------------------

context "math()"
snippet ^ "Superscript" i
^{$1}$0
endsnippet

context "math()"
snippet _ "Subscript" i
_{$1}$0
endsnippet

context "math()"
snippet // "Fraction" iA
\frac{$1}{$2}$0
endsnippet

context "math()"
snippet mbb "mathbb" iA
\mathbb{$1}$0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

snippet \tx "Text" A
\text{$1}$0
endsnippet

snippet \lfloor "Math Floor" i
\lfloor $1 \rfloor $0
endsnippet

snippet \lceil "Math Ceiling" i
\lceil $1 \rceil $0
endsnippet

snippet \{} "Escaped curly brackets"
\\{ $1 \\}$0
endsnippet

# utilities -----------------------------------------

context "math()"
snippet -> "Single Arrow" iA
\rightarrow$0
endsnippet

context "notmath()"
snippet -> "Single Arrow" wA
$\rightarrow$$0
endsnippet

context "math()"
snippet => "Double Arrow" iA
\Rightarrow$0
endsnippet

context "notmath()"
snippet => "Double Arrow" wA
$\Rightarrow$$0
endsnippet

snippet nicetabular "Nice Table Format" 
{\rowcolors{2}{gray!15}{gray!5}\begin{tabular}
		{ccc}
		\rowcolor{cyan!10} 
		\textbf{$1} & \textbf{$2} \\\\ \hline 
		$3 & $4 \\\\ 
		$0
		\hline
	\end{tabular}
}
endsnippet

snippet \img "Include Graphics"
\includegraphics[width=0.$1\linewidth]{$2} $0
endsnippet

snippet minipage "Minipage"
\begin{minipage}[c]{0.$1\linewidth}
	$0
\end{minipage}
endsnippet

snippet box "Box"
`!p snip.rv = '┌' + '─' * (len(t[1]) + 2) + '┐'`
│ $1 │
`!p snip.rv = '└' + '─' * (len(t[1]) + 2) + '┘'`
$0
endsnippet

